@page "/CreateRepair"
@using BlazorInputFile
@inject NavigationManager navMan
@inject HttpClient client

<head>
	<style>
		.resize {
			resize: vertical;
		}
	</style>
</head>


<EditForm Model="@repair">
	<DataAnnotationsValidator />

	<div class="mat-layout-grid">
		<div class="mat-layout-grid-inner">
			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
				<h1>Create a new repair</h1>
			</div>
			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
			</div>
			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
			</div>

			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
				<p>
					<h3>Customer data</h3>
					<MatDivider />
				</p>

				<p>
					<MatTextField Label="Name"
								  Outlined="true"
								  @bind-Value="@repair.CustomerName" />
				</p>

				<p>
					<MatTextField Label="Address"
								  Outlined="true"
								  @bind-Value="@repair.CustomerAddress" />
				</p>

				<p>
					<MatTextField Label="Phone Number"
								  Outlined="true"
								  Type="number"
								  @bind-Value="@repair.CustomerPhoneNumber" />
				</p>

				<p>
					<MatCheckbox Label="Going to address"
								 @bind-Value="@repair.GoingToAddress" />
				</p>

				<p>
					<MatTextField Label="Defect by customer"
								  Outlined="true"
								  @bind-Value="@repair.Defect" />
				</p>

				<p>
					<MatTextField Label="Add equipment"
								  Outlined="true"
								  @bind-Value="@repair.AdditionalInformation" />
				</p>

				<p>
					<MatTextField 
						Label="Other information"
						Outlined="true"
						@bind-Value="@repair.AdditionalInformation" />
				</p>

				<ValidationSummary />
			</div>

			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
				<p>
					<h3>Unit data</h3>
					<MatDivider />
				</p>

				<p>
					<RadzenMenu>
						<RadzenMenuItem Text="Select Brand"></RadzenMenuItem>	
					</RadzenMenu>
				</p>

				<p>
					
				</p>

				<p>
					<DxComboBox Data="@BrandsInfo.Brands"
								NullText="Select type"
								ListRenderMode="@ListRenderMode.Virtual"
								AllowUserInput="true"
								@bind-SelectedItem="@repair.ApplianceType" />
				</p>

				<p>
					<MatTextField Label="Model"
								  Outlined="true"
								  @bind-Value="@repair.ApplianceModel" />

					<InputFile OnChange="@CheckForValidSNImage"></InputFile>
				</p>

				<p>
					<MatTextField Label="S/N"
								  Outlined="true"
								  @bind-Value="@repair.ApplianceSerialNumber" />

					<MatTextField Label="Product code/IMEI"
								  Outlined="true"
								  @bind-Value="@repair.ApplianceProductCodeOrImei" />
				</p>

				<p>
					<MatDatePicker Label="Bought at"
								   Outlined="true"
								   @bind-Value="@repair.BoughtAt" />

					<MatTextField Label="WC number"
								  Outlined="true"
								  @bind-Value="@repair.WarrantyCardNumber" />
				</p>

				<p>
					<MatNumericUpDownField Label="Warranty period"
										   Step="12"
										   Type="number"
										   Minimum="0"
										   DecimalPlaces="0"
										   @bind-Value="@repair.WarrantyPeriod" />

					<InputFile OnChange="@SaveImages"></InputFile>
				</p>

				<p>
					<MatTextField Label="Dealer/Shop"
								  Outlined="true"
								  @bind-Value="@repair.WarrantyCardNumber" />
				</p>
			</div>

			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
			</div>
			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
				<MatButton Raised="true" OnClick="UploadRepair" Type="submit">Save</MatButton>
				<MatButton Raised="true" OnClick="ResetForm">Cancel</MatButton>
			</div>
			<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
			</div>
		</div>
	</div>

</EditForm>

@code {
	int id = 0;
	string newBrand = "";
	string newModel = "";
	string serviceName = "";
	AddRepairBindingModel repair = new AddRepairBindingModel();
	List<string> models = new List<string>();

	void CheckForValidSNImage(IFileListEntry [] files) {

	}

	void UploadRepair() {
		client.PostJsonAsync
			<AddRepairBindingModel>("", repair);
	}

	void ResetForm() {

	}

	void SaveImages(IFileListEntry [] files) {

	}
}